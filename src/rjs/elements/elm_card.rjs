import ['mana_symbol_to_elm'], "../core/string"

export default class ElmCard < HTMLElement
  INIT = "ech_init"
  DOM_SYMBOL = "[*]"

  def initialize
    super
    @h_init_elm = lambda { |e| init_elm(e.detail.data); click() }
    @card_tab = document.getElementById('card-tab')
  end

  def connectedCallback()
    document.addEventListener(INIT, @h_init_elm)
  end

  def disconnectedCallback()
    document.removeEventListener(INIT, @h_init_elm)
  end

  def init_elm(card)
    l_urls = lambda do
      result = ""
      Object.entries(card.purchaseUrls).forEach do |obj|
        key   = obj[0]
        value = obj[1]
        result += "<li><a href='#{value}' target='_blank'>#{key}</a></li>\n"
      end
      return result
    end

    template = """
      <h2 class='display-6 text-center mb-4'>#{card.name}</h2>
      <ul class='list-inline'>
        <li class='list-inline-item'>Type:</li>
        <li class='list-inline-item'>#{card.type}</li>
      </ul>
      
      #{implement_dom("<ul class='list-inline'><li class='list-inline-item'>Color:</li><li class='list-inline-item'>#{DOM_SYMBOL}</li></ul>", card.colorIdentity)}
      #{implement_dom("<ul class='list-inline'><li class='list-inline-item'>Cast:</li><li class='list-inline-item'>#{DOM_SYMBOL}</li></ul>", mana_symbol_to_elm(card.manaCost))}
      #{implement_dom("<ul class='list-inline'><li class='list-inline-item'>Pow/Tuf:</li><li class='list-inline-item'>#{DOM_SYMBOL}</li></ul>", card.power)}
      <p class='lead'>#{card.text}</p>
      #{implement_dom("<p><em>#{DOM_SYMBOL}</em></p>", card.flavorText)}

      <ul class='list-unstyled'>
        <li>
          URLs:
          <ul>
            #{l_urls.call()}
          </ul>
        </li>
      </ul>
    """

    self.innerHTML = template
  end

  def click()
    @card_tab.className = "nav-link"
    @card_tab.click()
  end

  def implement_dom(dom, value)
    result = ""
    unless value == nil
      result = dom.replace(DOM_SYMBOL, value)
    end
    return result
  end
end
