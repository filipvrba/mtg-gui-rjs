import '../css/style.css'
import '../css/bootstrap.min.css'

import './elements'
import "API", "./third-side/api"
import 'ElmCards', './elements/elm_cards'
import 'ElmCard', './elements/elm_card'
import 'ElmPagination', './elements/elm_pagination'

data = nil
rows = 0
def click_select_card(id)
  event = new CustomEvent(ElmCard::INIT, {
    detail: {
      data: data[id]
    }
  })
  document.dispatchEvent(event)
end
window.click_select_card = click_select_card

# document.querySelector('#app').innerHTML = "<h1>Hello RubyJS</h1>"

def dispatch_data(env, data)
  event = new CustomEvent(env, {
    detail: {
      data: data
    }
  })
  document.dispatchEvent(event)
end

# Get Data
q_where = "hasFoil=0"
qw_row  = "row > 0 AND row <= 10"
select_query = "SELECT * FROM (SELECT ROW_NUMBER() OVER() row, * FROM cards WHERE #{q_where}) t WHERE #{qw_row} AND #{q_where}"
count_query  = "SELECT COUNT(*) as rows FROM cards WHERE #{q_where}"

API.get_result(select_query, lambda do |d|  # SELECT * FROM cards WHERE hasFoil=0 LIMIT 50
  data = d
  dispatch_data(ElmCards::INIT, data)

  API.get_result(count_query, lambda do |d|
    rows = parseInt(d[0].rows)
    dispatch_data(ElmPagination::INIT, rows)
  end)
end)
